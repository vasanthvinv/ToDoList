{"ast":null,"code":"var _jsxFileName = \"/root/todolist/src/list.tsx\";\n// import React, { useState } from \"react\";\n\n// interface InputProps {\n//     data: string[];\n//     setData: React.Dispatch<React.SetStateAction<string[]>>;\n//     currentValue: string;\n//     setCurrentValue: React.Dispatch<React.SetStateAction<string>>;\n// all: boolean;\n// active: boolean;\n// completed: boolean;\n//   }\n\n// const List: React.FC<InputProps>  = ({ data, all,active,completed}) => { \n//      return (\n//     <div>\n//       {data.map((item, i) => (\n//        {all && \n//           <input type=\"checkbox\" />\n//           <td key={i}>{item}</td>\n//           <button>X</button>\n//        }\n//         {active && \n//             <input type=\"checkbox\" />\n//             <td key={i}>{item}</td>\n//             <button>X</button>\n//         }\n//           {completed && \n//             <input type=\"checkbox\" />\n//             <td key={i}>{item}</td>\n//             <button>X</button>\n//           }\n//       ))}\n//     </div>\n//   );\n// }\n\n// export default List;\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = ({\n  data,\n  all,\n  active,\n  completed\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"10px\"\n      },\n      children: [all && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }, this), active && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this), completed && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","List","data","all","active","completed","children","map","item","i","style","marginBottom","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/root/todolist/src/list.tsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n\r\n// interface InputProps {\r\n//     data: string[];\r\n//     setData: React.Dispatch<React.SetStateAction<string[]>>;\r\n//     currentValue: string;\r\n//     setCurrentValue: React.Dispatch<React.SetStateAction<string>>;\r\n// all: boolean;\r\n// active: boolean;\r\n// completed: boolean;\r\n//   }\r\n\r\n// const List: React.FC<InputProps>  = ({ data, all,active,completed}) => { \r\n//      return (\r\n//     <div>\r\n//       {data.map((item, i) => (\r\n//        {all && \r\n//           <input type=\"checkbox\" />\r\n//           <td key={i}>{item}</td>\r\n//           <button>X</button>\r\n//        }\r\n//         {active && \r\n//             <input type=\"checkbox\" />\r\n//             <td key={i}>{item}</td>\r\n//             <button>X</button>\r\n//         }\r\n//           {completed && \r\n//             <input type=\"checkbox\" />\r\n//             <td key={i}>{item}</td>\r\n//             <button>X</button>\r\n//           }\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default List;\r\n\r\n\r\nimport React from \"react\";\r\n\r\ninterface InputProps {\r\n    data: string[];\r\n    all: boolean;\r\n    active: boolean;\r\n    completed: boolean;\r\n}\r\n\r\nconst List: React.FC<InputProps> = ({ data, all, active, completed }) => {\r\n    return (\r\n        <div>\r\n            {data.map((item, i) => (\r\n                <div key={i} style={{ marginBottom: \"10px\" }}>\r\n                    {all && (\r\n                        <div>\r\n                            <input type=\"checkbox\" />\r\n                            <span>{item}</span>\r\n                            <button>X</button>\r\n                        </div>\r\n                    )}\r\n                    {active && (\r\n                        <div>\r\n                            <input type=\"checkbox\" />\r\n                            <span>{item}</span>\r\n                            <button>X</button>\r\n                        </div>\r\n                    )}\r\n                    {completed && (\r\n                        <div>\r\n                            <input type=\"checkbox\" />\r\n                            <span>{item}</span>\r\n                            <button>X</button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default List;\r\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS1B,MAAMC,IAA0B,GAAGA,CAAC;EAAEC,IAAI;EAAEC,GAAG;EAAEC,MAAM;EAAEC;AAAU,CAAC,KAAK;EACrE,oBACIL,OAAA;IAAAM,QAAA,EACKJ,IAAI,CAACK,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBACdT,OAAA;MAAaU,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAL,QAAA,GACxCH,GAAG,iBACAH,OAAA;QAAAM,QAAA,gBACIN,OAAA;UAAOY,IAAI,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzBhB,OAAA;UAAAM,QAAA,EAAOE;QAAI;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnBhB,OAAA;UAAAM,QAAA,EAAQ;QAAC;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CACR,EACAZ,MAAM,iBACHJ,OAAA;QAAAM,QAAA,gBACIN,OAAA;UAAOY,IAAI,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzBhB,OAAA;UAAAM,QAAA,EAAOE;QAAI;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnBhB,OAAA;UAAAM,QAAA,EAAQ;QAAC;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CACR,EACAX,SAAS,iBACNL,OAAA;QAAAM,QAAA,gBACIN,OAAA;UAAOY,IAAI,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzBhB,OAAA;UAAAM,QAAA,EAAOE;QAAI;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnBhB,OAAA;UAAAM,QAAA,EAAQ;QAAC;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CACR;IAAA,GArBKP,CAAC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAsBN,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAAC,EAAA,GA9BKhB,IAA0B;AAgChC,eAAeA,IAAI;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}