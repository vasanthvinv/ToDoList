{"ast":null,"code":"// import React, { useReducer, SetStateAction } from \"react\";\n// import Input from \"./input\";\n// import List from \"./list\";\n// import Details from \"./details\";\n// import \"./App.css\";\n\n// interface State{\n//   data: [];\n//   currentValue: string;\n//   selected: [],\n//   all: boolean,\n//   active: boolean,\n//   completed: boolean,\n// }\n\n// type Action = \n// | {type: \"SET_DATA\" , payload: string}\n// | {type: \"SET_CURRENT_VALUE\" , payload: string}\n// | {type: \"SET_SELECTED\" , payload: string}\n// | {type: \"SET_FILTER\" , payload: string}\n// | {type: \"CLEAR_COMPLETED\" }\n\n// const initialState:State = {\n//   data: [],\n//   currentValue: \"\",\n//   selected: [],\n//   all: true,\n//   active: false,\n//   completed: false,\n// };\n\n// function reducer(state: State, action:Action) {\n//   switch (action.type) {\n//     case \"SET_DATA\":\n//       return { ...state, data: action.payload };\n//     case \"SET_CURRENT_VALUE\":\n//       return { ...state, currentValue: action.payload };\n//     case \"SET_SELECTED\":\n//       return { ...state, selected: action.payload };\n//     case \"SET_FILTER\":\n//       return {\n//         ...state,\n//         all: action.payload === \"all\",\n//         active: action.payload === \"active\",\n//         completed: action.payload === \"completed\",\n//       };\n//     case \"CLEAR_COMPLETED\":\n//       return {\n//         ...state,\n//         data: state.data.filter((item) => !state.selected.includes(item)),\n//         selected: [],\n//       };\n//     default:\n//       return state;\n//   }\n// }\n\n// function App() {\n//   const [state, dispatch] = useReducer(reducer, initialState);\n\n//   const handleAll = () => {\n//     dispatch({ type: \"SET_FILTER\", payload: \"all\" });\n//   };\n//   const handleActive = () => {\n//     dispatch({ type: \"SET_FILTER\", payload: \"active\" });\n//   };\n//   const handleCompleted = () => {\n//     dispatch({ type: \"SET_FILTER\", payload: \"completed\" });\n//   };\n//   const handleClearCompleted = () => {\n//     dispatch({ type: \"CLEAR_COMPLETED\" });\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <h2>todos</h2>\n//       <Input\n//         data={state.data}\n\n//         currentValue={state.currentValue}\n//         setCurrentValue={setCurrentValue}\n//       />\n//       <List\n//         data={state.data}\n//         selected={state.selected}\n//         setSelected={setSelected}\n//         setData={setData}\n//         all={state.all}\n//         active={state.active}\n//         completed={state.completed}\n//       />\n//       <Details\n//         data={state.data}\n//         selected={state.selected}\n//         handleAll={handleAll}\n//         handleActive={handleActive}\n//         handleCompleted={handleCompleted}\n//         handleClearCompleted={handleClearCompleted}\n//       />\n//     </div>\n//   );\n// }\n\n// export default App;\n\nre;","map":{"version":3,"names":["re"],"sources":["/root/todolist/src/App.tsx"],"sourcesContent":["// import React, { useReducer, SetStateAction } from \"react\";\n// import Input from \"./input\";\n// import List from \"./list\";\n// import Details from \"./details\";\n// import \"./App.css\";\n\n\n// interface State{\n//   data: [];\n//   currentValue: string;\n//   selected: [],\n//   all: boolean,\n//   active: boolean,\n//   completed: boolean,\n// }\n\n// type Action = \n// | {type: \"SET_DATA\" , payload: string}\n// | {type: \"SET_CURRENT_VALUE\" , payload: string}\n// | {type: \"SET_SELECTED\" , payload: string}\n// | {type: \"SET_FILTER\" , payload: string}\n// | {type: \"CLEAR_COMPLETED\" }\n\n\n\n\n// const initialState:State = {\n//   data: [],\n//   currentValue: \"\",\n//   selected: [],\n//   all: true,\n//   active: false,\n//   completed: false,\n// };\n\n// function reducer(state: State, action:Action) {\n//   switch (action.type) {\n//     case \"SET_DATA\":\n//       return { ...state, data: action.payload };\n//     case \"SET_CURRENT_VALUE\":\n//       return { ...state, currentValue: action.payload };\n//     case \"SET_SELECTED\":\n//       return { ...state, selected: action.payload };\n//     case \"SET_FILTER\":\n//       return {\n//         ...state,\n//         all: action.payload === \"all\",\n//         active: action.payload === \"active\",\n//         completed: action.payload === \"completed\",\n//       };\n//     case \"CLEAR_COMPLETED\":\n//       return {\n//         ...state,\n//         data: state.data.filter((item) => !state.selected.includes(item)),\n//         selected: [],\n//       };\n//     default:\n//       return state;\n//   }\n// }\n\n// function App() {\n//   const [state, dispatch] = useReducer(reducer, initialState);\n\n//   const handleAll = () => {\n//     dispatch({ type: \"SET_FILTER\", payload: \"all\" });\n//   };\n//   const handleActive = () => {\n//     dispatch({ type: \"SET_FILTER\", payload: \"active\" });\n//   };\n//   const handleCompleted = () => {\n//     dispatch({ type: \"SET_FILTER\", payload: \"completed\" });\n//   };\n//   const handleClearCompleted = () => {\n//     dispatch({ type: \"CLEAR_COMPLETED\" });\n//   };\n\n\n//   return (\n//     <div className=\"App\">\n//       <h2>todos</h2>\n//       <Input\n//         data={state.data}\n        \n//         currentValue={state.currentValue}\n//         setCurrentValue={setCurrentValue}\n//       />\n//       <List\n//         data={state.data}\n//         selected={state.selected}\n//         setSelected={setSelected}\n//         setData={setData}\n//         all={state.all}\n//         active={state.active}\n//         completed={state.completed}\n//       />\n//       <Details\n//         data={state.data}\n//         selected={state.selected}\n//         handleAll={handleAll}\n//         handleActive={handleActive}\n//         handleCompleted={handleCompleted}\n//         handleClearCompleted={handleClearCompleted}\n//       />\n//     </div>\n//   );\n// }\n\n// export default App;\n\nre"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEAA,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}