{"ast":null,"code":"var _jsxFileName = \"/root/todolist/src/list.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = ({\n  data,\n  all,\n  active,\n  completed\n}) => {\n  _s();\n  const [datas, setDatas] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [all && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: setDatas.includes(item)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 25\n      }, this), active && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this), completed && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_s(List, \"7DSDjzvM1yG5EmrySQXA5HeqRJk=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","List","data","all","active","completed","_s","datas","setDatas","useState","children","map","item","i","type","checked","includes","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/root/todolist/src/list.tsx"],"sourcesContent":["import React from \"react\";\r\n\r\ninterface InputProps {\r\n    data: string[];\r\n    all: boolean;\r\n    active: boolean;\r\n    completed: boolean;\r\n}\r\n\r\nconst List: React.FC<InputProps> = ({ data, all, active, completed }) => {\r\n    const [datas, setDatas] = useState<string[]>([]);\r\n\r\n    return (\r\n        <div>\r\n            {data.map((item, i) => (\r\n                <div key={i} >\r\n                    {all && (\r\n                        <div>\r\n                            <input type=\"checkbox\" checked={setDatas.includes(item) }/>\r\n                            \r\n                            <span>{item}</span>\r\n                            <button>X</button>\r\n                        </div>\r\n                    )}\r\n                    {active && (\r\n                        <div>\r\n                            <input type=\"checkbox\" />\r\n                            <span>{item}</span>\r\n                            <button>X</button>\r\n                        </div>\r\n                    )}\r\n                    {completed && (\r\n                        <div>\r\n                            <input type=\"checkbox\" />\r\n                           { <span>{item}</span>}\r\n                            <button>X</button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default List;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS1B,MAAMC,IAA0B,GAAGA,CAAC;EAAEC,IAAI;EAAEC,GAAG;EAAEC,MAAM;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAW,EAAE,CAAC;EAEhD,oBACIT,OAAA;IAAAU,QAAA,EACKR,IAAI,CAACS,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBACdb,OAAA;MAAAU,QAAA,GACKP,GAAG,iBACAH,OAAA;QAAAU,QAAA,gBACIV,OAAA;UAAOc,IAAI,EAAC,UAAU;UAACC,OAAO,EAAEP,QAAQ,CAACQ,QAAQ,CAACJ,IAAI;QAAG;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAE3DpB,OAAA;UAAAU,QAAA,EAAOE;QAAI;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnBpB,OAAA;UAAAU,QAAA,EAAQ;QAAC;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CACR,EACAhB,MAAM,iBACHJ,OAAA;QAAAU,QAAA,gBACIV,OAAA;UAAOc,IAAI,EAAC;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzBpB,OAAA;UAAAU,QAAA,EAAOE;QAAI;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnBpB,OAAA;UAAAU,QAAA,EAAQ;QAAC;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CACR,EACAf,SAAS,iBACNL,OAAA;QAAAU,QAAA,gBACIV,OAAA;UAAOc,IAAI,EAAC;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxBpB,OAAA;UAAAU,QAAA,EAAOE;QAAI;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpBpB,OAAA;UAAAU,QAAA,EAAQ;QAAC;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CACR;IAAA,GAtBKP,CAAC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAuBN,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAAd,EAAA,CAjCKL,IAA0B;AAAAoB,EAAA,GAA1BpB,IAA0B;AAmChC,eAAeA,IAAI;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}