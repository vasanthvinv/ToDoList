{"ast":null,"code":"var _jsxFileName = \"/root/todolist/src/App.tsx\",\n  _s = $RefreshSig$();\n// import React,{useState} from 'react';\n// import Input from './input';\n// import List from './list';\n// import Details from './details';\n// import './App.css';\n\n// function App() {\n//   const [data, setData] = useState<string[]>([]);\n//   const [currentValue, setCurrentValue] = useState(\"\");\n\n//   return (\n//     <div className=\"App\">\n//       <h2>todos</h2>\n//   <Input data={data} setData={setData} currentValue={currentValue} setCurrentValue={setCurrentValue}/>\n//   <List data={data} setData={setData} currentValue={currentValue} setCurrentValue={setCurrentValue}/>\n//   <Details />\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from \"react\";\nimport List from \"./List\";\nimport Details from \"./Details\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState([{\n    text: \"Item 1\",\n    completed: false\n  }, {\n    text: \"Item 2\",\n    completed: true\n  }\n  // Add more items as needed\n  ]);\n  const [filter, setFilter] = useState(\"all\");\n  const clearCompleted = () => {\n    setData(prevData => prevData.filter(item => !item.completed));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      data: data,\n      setData: setData,\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Details, {\n      filter: filter,\n      setFilter: setFilter,\n      clearCompleted: clearCompleted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"4mbVtZlTM74G1uTqjV1vE4jCkp4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","List","Details","jsxDEV","_jsxDEV","App","_s","data","setData","text","completed","filter","setFilter","clearCompleted","prevData","item","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/root/todolist/src/App.tsx"],"sourcesContent":["// import React,{useState} from 'react';\n// import Input from './input';\n// import List from './list';\n// import Details from './details';\n// import './App.css';\n\n// function App() {\n//   const [data, setData] = useState<string[]>([]);\n//   const [currentValue, setCurrentValue] = useState(\"\");\n\n//   return (\n//     <div className=\"App\">\n//       <h2>todos</h2>\n//   <Input data={data} setData={setData} currentValue={currentValue} setCurrentValue={setCurrentValue}/>\n//   <List data={data} setData={setData} currentValue={currentValue} setCurrentValue={setCurrentValue}/>\n//   <Details />\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from \"react\";\nimport List from \"./List\";\nimport Details from \"./Details\";\n\nconst App: React.FC = () => {\n  const [data, setData] = useState<{ text: string; completed: boolean }[]>([\n    { text: \"Item 1\", completed: false },\n    { text: \"Item 2\", completed: true },\n    // Add more items as needed\n  ]);\n  const [filter, setFilter] = useState<\"all\" | \"active\" | \"completed\">(\"all\");\n\n  const clearCompleted = () => {\n    setData(prevData => prevData.filter(item => !item.completed));\n  };\n\n  return (\n    <div>\n      <List data={data} setData={setData} filter={filter} setFilter={setFilter} />\n      <Details filter={filter} setFilter={setFilter} clearCompleted={clearCompleted} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAyC,CACvE;IAAES,IAAI,EAAE,QAAQ;IAAEC,SAAS,EAAE;EAAM,CAAC,EACpC;IAAED,IAAI,EAAE,QAAQ;IAAEC,SAAS,EAAE;EAAK;EAClC;EAAA,CACD,CAAC;EACF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAiC,KAAK,CAAC;EAE3E,MAAMa,cAAc,GAAGA,CAAA,KAAM;IAC3BL,OAAO,CAACM,QAAQ,IAAIA,QAAQ,CAACH,MAAM,CAACI,IAAI,IAAI,CAACA,IAAI,CAACL,SAAS,CAAC,CAAC;EAC/D,CAAC;EAED,oBACEN,OAAA;IAAAY,QAAA,gBACEZ,OAAA,CAACH,IAAI;MAACM,IAAI,EAAEA,IAAK;MAACC,OAAO,EAAEA,OAAQ;MAACG,MAAM,EAAEA,MAAO;MAACC,SAAS,EAAEA;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5EhB,OAAA,CAACF,OAAO;MAACS,MAAM,EAAEA,MAAO;MAACC,SAAS,EAAEA,SAAU;MAACC,cAAc,EAAEA;IAAe;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9E,CAAC;AAEV,CAAC;AAACd,EAAA,CAlBID,GAAa;AAAAgB,EAAA,GAAbhB,GAAa;AAoBnB,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}