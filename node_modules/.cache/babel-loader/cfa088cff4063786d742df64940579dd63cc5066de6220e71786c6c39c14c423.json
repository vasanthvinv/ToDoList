{"ast":null,"code":"// import React from \"react\";\n\n// interface ListProps {\n//   data: string[];\n//   all: boolean;\n//   active: boolean;\n//   completed: boolean;\n//   datas: string[];\n//   setDatas: React.Dispatch<React.SetStateAction<string[]>>;\n// }\n\n// const List: React.FC<ListProps> = ({\n//   data,\n//   all,\n//   active,\n//   completed,\n//   datas,\n//   setDatas,\n// }) => {\n//   const handleChange = (item: string) => {\n//     setDatas((prev) =>\n//       prev.includes(item) ? prev.filter((i) => i !== item) : [...prev, item]\n//     );\n//   };\n//   const handleRemove= (item:string) => {\n//     setDatas((prev) => prev.filter((i) => i !== item)); \n//  }\n\n//   const filteredData = data.filter((item) => {\n//     if (all) return true;\n//     if (active) return !datas.includes(item);\n//     if (completed) return datas.includes(item);\n//     return false;\n//   });\n\n//   return (\n//     <div>\n//       {filteredData.map((item, i) => (\n//         <div key={i}>\n//           <input\n//             type=\"checkbox\"\n//             checked={datas.includes(item)}\n//             onChange={() => handleChange(item)}\n//           />\n//           <span>{item}</span>\n//           <button\n//             onClick={() => handleRemove(item)}\n//           >\n//             X\n//           </button>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default List;","map":{"version":3,"names":[],"sources":["/root/todolist/src/list.tsx"],"sourcesContent":["// import React from \"react\";\r\n\r\n// interface ListProps {\r\n//   data: string[];\r\n//   all: boolean;\r\n//   active: boolean;\r\n//   completed: boolean;\r\n//   datas: string[];\r\n//   setDatas: React.Dispatch<React.SetStateAction<string[]>>;\r\n// }\r\n\r\n// const List: React.FC<ListProps> = ({\r\n//   data,\r\n//   all,\r\n//   active,\r\n//   completed,\r\n//   datas,\r\n//   setDatas,\r\n// }) => {\r\n//   const handleChange = (item: string) => {\r\n//     setDatas((prev) =>\r\n//       prev.includes(item) ? prev.filter((i) => i !== item) : [...prev, item]\r\n//     );\r\n//   };\r\n//   const handleRemove= (item:string) => {\r\n//     setDatas((prev) => prev.filter((i) => i !== item)); \r\n//  }\r\n\r\n//   const filteredData = data.filter((item) => {\r\n//     if (all) return true;\r\n//     if (active) return !datas.includes(item);\r\n//     if (completed) return datas.includes(item);\r\n//     return false;\r\n//   });\r\n\r\n//   return (\r\n//     <div>\r\n//       {filteredData.map((item, i) => (\r\n//         <div key={i}>\r\n//           <input\r\n//             type=\"checkbox\"\r\n//             checked={datas.includes(item)}\r\n//             onChange={() => handleChange(item)}\r\n//           />\r\n//           <span>{item}</span>\r\n//           <button\r\n//             onClick={() => handleRemove(item)}\r\n//           >\r\n//             X\r\n//           </button>\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default List;\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}