{"ast":null,"code":"var _jsxFileName = \"/root/todolist/src/list.tsx\";\n// import React from \"react\";\n\n// interface InputProps {\n//     data: string[];\n//     all: boolean;\n//     active: boolean;\n//     completed: boolean;\n// }\n\n// const List: React.FC<InputProps> = ({ data, all, active, completed,datas,setDatas }) => {\n//     const handlechange =(item) =>{\n//         setDatas((prev) => prev.includes(item)? prev.filter((items) => items !== item): [...prev , item ]\n//         )\n//         }\n//     return (\n//         <div>\n//             {data.map((item, i) => (\n//                 <div key={i} >\n//                     {all && (\n//                         <div>\n//                             <input type=\"checkbox\" checked={setDatas.includes(item) onChange={()=>handlechange(item)}}/>\n//                             <span>{item}</span>\n//                             <button>X</button>\n//                         </div>\n//                     )}\n//                     {active && (\n//                         <div>\n//                             <input type=\"checkbox\" />\n//                             <span>{item}</span>\n//                             <button>X</button>\n//                         </div>\n//                     )}\n//                     {completed && (\n//                         <div>\n//                             <input type=\"checkbox\" />\n//                            {datas.map((itemss)  =>( <span>{itemss}</span>))}\n//                             <button>X</button>\n//                         </div>\n//                     )}\n//                 </div>\n//             ))}\n//         </div>\n//     );\n// }\n\n// export default List;\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = ({\n  data,\n  all,\n  active,\n  completed,\n  datas,\n  setDatas\n}) => {\n  const handleChange = item => {\n    setDatas(prev => prev.includes(item) ? prev.filter(i => i !== item) : [...prev, item]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [all && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: datas.includes(item),\n          onChange: () => handleChange(item)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, this), active && !completed && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: datas.includes(item),\n          onChange: () => handleChange(item)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }, this), completed && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: datas.includes(item),\n          onChange: () => handleChange(item)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","List","data","all","active","completed","datas","setDatas","handleChange","item","prev","includes","filter","i","children","map","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/root/todolist/src/list.tsx"],"sourcesContent":["// import React from \"react\";\r\n\r\n// interface InputProps {\r\n//     data: string[];\r\n//     all: boolean;\r\n//     active: boolean;\r\n//     completed: boolean;\r\n// }\r\n\r\n// const List: React.FC<InputProps> = ({ data, all, active, completed,datas,setDatas }) => {\r\n//     const handlechange =(item) =>{\r\n//         setDatas((prev) => prev.includes(item)? prev.filter((items) => items !== item): [...prev , item ]\r\n//         )\r\n//         }\r\n//     return (\r\n//         <div>\r\n//             {data.map((item, i) => (\r\n//                 <div key={i} >\r\n//                     {all && (\r\n//                         <div>\r\n//                             <input type=\"checkbox\" checked={setDatas.includes(item) onChange={()=>handlechange(item)}}/>\r\n//                             <span>{item}</span>\r\n//                             <button>X</button>\r\n//                         </div>\r\n//                     )}\r\n//                     {active && (\r\n//                         <div>\r\n//                             <input type=\"checkbox\" />\r\n//                             <span>{item}</span>\r\n//                             <button>X</button>\r\n//                         </div>\r\n//                     )}\r\n//                     {completed && (\r\n//                         <div>\r\n//                             <input type=\"checkbox\" />\r\n//                            {datas.map((itemss)  =>( <span>{itemss}</span>))}\r\n//                             <button>X</button>\r\n//                         </div>\r\n//                     )}\r\n//                 </div>\r\n//             ))}\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default List;\r\n\r\nimport React from \"react\";\r\n\r\ninterface InputProps {\r\n    data: string[];\r\n    all: boolean;\r\n    active: boolean;\r\n    completed: boolean;\r\n    datas: string[];\r\n    setDatas: React.Dispatch<React.SetStateAction<string[]>>;\r\n}\r\n\r\nconst List: React.FC<InputProps> = ({ data, all, active, completed, datas, setDatas }) => {\r\n    const handleChange = (item: string) => {\r\n        setDatas((prev) => \r\n            prev.includes(item) ? prev.filter((i) => i !== item) : [...prev, item]\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {data.map((item, i) => (\r\n                <div key={i}>\r\n                    {all && (\r\n                        <div>\r\n                            <input \r\n                                type=\"checkbox\" \r\n                                checked={datas.includes(item)} \r\n                                onChange={() => handleChange(item)} \r\n                            />\r\n                            <span>{item}</span>\r\n                            <button>X</button>\r\n                        </div>\r\n                    )}\r\n                    {active && !completed && (\r\n                        <div>\r\n                            <input \r\n                                type=\"checkbox\" \r\n                                checked={datas.includes(item)} \r\n                                onChange={() => handleChange(item)} \r\n                            />\r\n                            <span>{item}</span>\r\n                            <button>X</button>\r\n                        </div>\r\n                    )}\r\n                    {completed && (\r\n                        <div>\r\n                            <input \r\n                                type=\"checkbox\" \r\n                                checked={datas.includes(item)} \r\n                                onChange={() => handleChange(item)} \r\n                            />\r\n                            <span>{item}</span>\r\n                            <button>X</button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default List;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}