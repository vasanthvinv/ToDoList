{"ast":null,"code":"var _jsxFileName = \"/root/todolist/src/Main.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useReducer, useState } from \"react\";\nimport \"./App.css\";\nimport produce from \"immer\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  todos: [],\n  filter: \"all\"\n};\nconst reducer = produce((state, action) => {\n  switch (action.type) {\n    case \"Set_Add\":\n      state.todos = [...state.todos, {\n        data: action.payload,\n        completed: false\n      }];\n      break;\n    case \"Set_Change\":\n      state.todos = _.map(state.todos, todo => todo.data === action.payload ? {\n        ...todo,\n        completed: !todo.completed\n      } : todo);\n      break;\n    case \"Set_Delete\":\n      state.todos = _.filter(state.todos, todo => todo.data !== action.payload);\n      break;\n    case \"Set_Filter\":\n      state.filter = action.payload;\n      break;\n    case \"Set_Completed\":\n      state.todos = _.filter(state.todos, todo => !todo.completed);\n      break;\n    case \"Set_Filtered_Data\":\n      const filteredTodos = state.todos.filter(todo => {\n        switch (state.filter) {\n          case \"all\":\n            return true;\n          case \"active\":\n            return !todo.completed;\n          case \"completed\":\n            return todo.completed;\n          default:\n            return true;\n        }\n      });\n      break;\n    case \"Set_Active_Count\":\n      state.todos = _.filter(state.todos, item => !item.completed).length;\n      break;\n  }\n});\nconst ToDoListContext = /*#__PURE__*/createContext();\nconst Main = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [currentValue, setCurrentValue] = useState(\"\");\n  const SetChange = event => {\n    setCurrentValue(event.target.value);\n  };\n  const SetAdd = event => {\n    if (event.key === \"Enter\") {\n      dispatch({\n        type: \"Set_Add\",\n        payload: currentValue\n      });\n      setCurrentValue(\"\");\n    }\n  };\n  const SetTodoChange = item => {\n    dispatch({\n      type: \"Set_Change\",\n      payload: item.data\n    });\n  };\n  const SetDelete = item => {\n    dispatch({\n      type: \"Set_Delete\",\n      payload: item.data\n    });\n  };\n  const SetFilterChange = filter => {\n    dispatch({\n      type: \"Set_Filter\",\n      payload: filter\n    });\n  };\n  const Set_Completed = () => {\n    dispatch({\n      type: \"Set_Completed\"\n    });\n  };\n  const Set_Filtered_Data = item => {\n    dispatch({\n      type: \"Set_Filtered_Data\",\n      payload: item\n    });\n  };\n  const Set_Active_Count = item => {\n    dispatch({\n      type: \"Set_Active_Count\",\n      payload: item\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDoListContext.Provider, {\n      value: {\n        ...state,\n        currentValue,\n        SetChange,\n        SetAdd,\n        Set_Filtered_Data,\n        SetTodoChange,\n        SetDelete,\n        Set_Active_Count,\n        SetFilterChange,\n        Set_Completed\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"kZxyTNvp1FMbAR/88aCVQlONNZw=\");\n_c = Main;\nexport default {\n  Main,\n  ToDoListContext\n};\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","createContext","useReducer","useState","produce","_","jsxDEV","_jsxDEV","initialState","todos","filter","reducer","state","action","type","data","payload","completed","map","todo","filteredTodos","item","length","ToDoListContext","Main","children","_s","dispatch","currentValue","setCurrentValue","SetChange","event","target","value","SetAdd","key","SetTodoChange","SetDelete","SetFilterChange","Set_Completed","Set_Filtered_Data","Set_Active_Count","className","fileName","_jsxFileName","lineNumber","columnNumber","Provider","_c","$RefreshReg$"],"sources":["/root/todolist/src/Main.tsx"],"sourcesContent":["import React, { createContext, useReducer, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Input from \"./Inputs\";\r\nimport ListDetail from \"./ListDetail\";\r\nimport Footer from \"./Footer\";\r\nimport produce from \"immer\";\r\nimport _ from \"lodash\";\r\n\r\ntype Action =\r\n  | { type: \"Set_Add\"; payload: string }\r\n  | { type: \"Set_Change\"; payload: string }\r\n  | { type: \"Set_Delete\"; payload: string }\r\n  | { type: \"Set_Filter\"; payload: \"all\" | \"active\" | \"completed\" }\r\n  | { type: \"Set_Completed\" }\r\n  | { type: \"Set_Filtered_Data\"; payload: Todo }\r\n  | { type: \"Set_Active_Count\"};\r\n\r\ninterface Todo {\r\n  data: string;\r\n  completed: boolean;\r\n}\r\n\r\ninterface State {\r\n  todos: Todo[];\r\n  filter: \"all\" | \"active\" | \"completed\";\r\n}\r\n\r\nconst initialState: State = {\r\n  todos: [],\r\n  filter: \"all\",\r\n};\r\n\r\nconst reducer = produce((state: State, action: Action) => {\r\n  switch (action.type) {\r\n    case \"Set_Add\":\r\n      state.todos = [\r\n        ...state.todos,\r\n        { data: action.payload, completed: false },\r\n      ];\r\n      break;\r\n\r\n    case \"Set_Change\":\r\n      state.todos = _.map(state.todos, (todo) =>\r\n        todo.data === action.payload\r\n          ? { ...todo, completed: !todo.completed }\r\n          : todo\r\n      );\r\n\r\n      break;\r\n\r\n    case \"Set_Delete\":\r\n      state.todos = _.filter(\r\n        state.todos,\r\n        (todo) => todo.data !== action.payload\r\n      );\r\n      break;\r\n\r\n    case \"Set_Filter\":\r\n      state.filter = action.payload;\r\n      break;\r\n\r\n    case \"Set_Completed\":\r\n      state.todos = _.filter(state.todos, (todo) => !todo.completed);\r\n      break;\r\n\r\n      case \"Set_Filtered_Data\":\r\n      const filteredTodos = state.todos.filter(todo => {\r\n        switch (state.filter) {\r\n          case \"all\":\r\n            return true;\r\n          case \"active\":\r\n            return !todo.completed;\r\n          case \"completed\":\r\n            return todo.completed;\r\n          default:\r\n            return true;\r\n        }\r\n      });\r\n      break\r\n\r\n    case \"Set_Active_Count\":\r\n      state.todos = _.filter(state.todos, (item) => !item.completed).length;\r\n      break;\r\n  }\r\n});\r\n\r\nconst ToDoListContext = createContext();\r\n\r\nconst Main = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const [currentValue, setCurrentValue] = useState<string>(\"\");\r\n\r\n  const SetChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setCurrentValue(event.target.value);\r\n  };\r\n\r\n  const SetAdd = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.key === \"Enter\") {\r\n      dispatch({ type: \"Set_Add\", payload: currentValue });\r\n      setCurrentValue(\"\");\r\n    }\r\n  };\r\n\r\n  const SetTodoChange = (item: Todo) => {\r\n    dispatch({ type: \"Set_Change\", payload: item.data });\r\n  };\r\n\r\n  const SetDelete = (item: Todo) => {\r\n    dispatch({ type: \"Set_Delete\", payload: item.data });\r\n  };\r\n\r\n  const SetFilterChange = (filter: \"all\" | \"active\" | \"completed\") => {\r\n    dispatch({ type: \"Set_Filter\", payload: filter });\r\n  };\r\n  const Set_Completed = () => {\r\n    dispatch({ type: \"Set_Completed\" });\r\n  };\r\n  const Set_Filtered_Data = (item: Todo) => {\r\n    dispatch({ type: \"Set_Filtered_Data\", payload: item });\r\n  };\r\n  const Set_Active_Count = (item: Todo) => {\r\n    dispatch({ type: \"Set_Active_Count\", payload: item });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Main\">\r\n      <h2>todos</h2>\r\n      <ToDoListContext.Provider\r\n        value={{\r\n          ...state,\r\n          currentValue,\r\n          SetChange,\r\n          SetAdd,\r\n          Set_Filtered_Data,\r\n          SetTodoChange,\r\n          SetDelete,\r\n          Set_Active_Count,\r\n          SetFilterChange,\r\n          Set_Completed,\r\n        }}\r\n      >\r\n        {children}\r\n      </ToDoListContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default { Main, ToDoListContext };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}