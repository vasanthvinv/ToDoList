{"ast":null,"code":"// import React from \"react\";\n\n// interface InputProps {\n//     data: string[];\n//     all: boolean;\n//     active: boolean;\n//     completed: boolean;\n// }\n\n// const List: React.FC<InputProps> = ({ data, all, active, completed,datas,setDatas }) => {\n//     const handlechange =(item) =>{\n//         setDatas((prev) => prev.includes(item)? prev.filter((items) => items !== item): [...prev , item ]\n//         )\n//         }\n//     return (\n//         <div>\n//             {data.map((item, i) => (\n//                 <div key={i} >\n//                     {all && (\n//                         <div>\n//                             <input type=\"checkbox\" checked={setDatas.includes(item) onChange={()=>handlechange(item)}}/>\n//                             <span>{item}</span>\n//                             <button>X</button>\n//                         </div>\n//                     )}\n//                     {active && (\n//                         <div>\n//                             <input type=\"checkbox\" />\n//                             <span>{item}</span>\n//                             <button>X</button>\n//                         </div>\n//                     )}\n//                     {completed && (\n//                         <div>\n//                             <input type=\"checkbox\" />\n//                            {datas.map((itemss)  =>( <span>{itemss}</span>))}\n//                             <button>X</button>\n//                         </div>\n//                     )}\n//                 </div>\n//             ))}\n//         </div>\n//     );\n// }\n\n// export default List;","map":{"version":3,"names":[],"sources":["/root/todolist/src/list.tsx"],"sourcesContent":["// import React from \"react\";\r\n\r\n// interface InputProps {\r\n//     data: string[];\r\n//     all: boolean;\r\n//     active: boolean;\r\n//     completed: boolean;\r\n// }\r\n\r\n// const List: React.FC<InputProps> = ({ data, all, active, completed,datas,setDatas }) => {\r\n//     const handlechange =(item) =>{\r\n//         setDatas((prev) => prev.includes(item)? prev.filter((items) => items !== item): [...prev , item ]\r\n//         )\r\n//         }\r\n//     return (\r\n//         <div>\r\n//             {data.map((item, i) => (\r\n//                 <div key={i} >\r\n//                     {all && (\r\n//                         <div>\r\n//                             <input type=\"checkbox\" checked={setDatas.includes(item) onChange={()=>handlechange(item)}}/>\r\n//                             <span>{item}</span>\r\n//                             <button>X</button>\r\n//                         </div>\r\n//                     )}\r\n//                     {active && (\r\n//                         <div>\r\n//                             <input type=\"checkbox\" />\r\n//                             <span>{item}</span>\r\n//                             <button>X</button>\r\n//                         </div>\r\n//                     )}\r\n//                     {completed && (\r\n//                         <div>\r\n//                             <input type=\"checkbox\" />\r\n//                            {datas.map((itemss)  =>( <span>{itemss}</span>))}\r\n//                             <button>X</button>\r\n//                         </div>\r\n//                     )}\r\n//                 </div>\r\n//             ))}\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default List;\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}