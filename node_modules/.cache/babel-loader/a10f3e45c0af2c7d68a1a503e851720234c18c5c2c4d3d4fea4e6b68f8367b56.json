{"ast":null,"code":"var _jsxFileName = \"/root/todolist/src/list.tsx\";\n// import React from \"react\";\n\n// interface ListProps {\n//   data: string[];\n//   all: boolean;\n//   active: boolean;\n//   completed: boolean;\n//   datas: string[];\n//   setDatas: React.Dispatch<React.SetStateAction<string[]>>;\n// }\n\n// const List: React.FC<ListProps> = ({\n//   data,\n//   all,\n//   active,\n//   completed,\n//   datas,\n//   setDatas,\n// }) => {\n//   const handleChange = (item: string) => {\n//     setDatas((prev) =>\n//       prev.includes(item) ? prev.filter((i) => i !== item) : [...prev, item]\n//     );\n//   };\n//   const handleRemove= (item:string) => {\n//     setDatas((prev) => prev.filter((i) => i !== item)); \n//  }\n\n//   const filteredData = data.filter((item) => {\n//     if (all) return true;\n//     if (active) return !datas.includes(item);\n//     if (completed) return datas.includes(item);\n//     return false;\n//   });\n\n//   return (\n//     <div>\n//       {filteredData.map((item, i) => (\n//         <div key={i}>\n//           <input\n//             type=\"checkbox\"\n//             checked={datas.includes(item)}\n//             onChange={() => handleChange(item)}\n//           />\n//           <span>{item}</span>\n//           <button\n//             onClick={() => handleRemove(item)}\n//           >\n//             X\n//           </button>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default List;\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = ({\n  data,\n  all,\n  active,\n  completed,\n  datas,\n  setDatas\n}) => {\n  // Toggle item between checked and unchecked states\n  const handleChange = item => {\n    setDatas(prev => prev.includes(item) ? prev.filter(i => i !== item) // Remove item\n    : [...prev, item] // Add item\n    );\n  };\n\n  // Remove item from the list\n  const handleRemove = item => {\n    setDatas(prev => prev.filter(i => i !== item));\n  };\n\n  // Filter data based on the provided criteria\n  const filteredData = data.filter(item => {\n    if (all) return true;\n    if (active) return !datas.includes(item); // Show only active items\n    if (completed) return datas.includes(item); // Show only completed items\n    return false;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: filteredData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: datas.includes(item),\n        onChange: () => handleChange(item)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleRemove(item),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","List","data","all","active","completed","datas","setDatas","handleChange","item","prev","includes","filter","i","handleRemove","filteredData","children","map","index","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/root/todolist/src/list.tsx"],"sourcesContent":["// import React from \"react\";\r\n\r\n// interface ListProps {\r\n//   data: string[];\r\n//   all: boolean;\r\n//   active: boolean;\r\n//   completed: boolean;\r\n//   datas: string[];\r\n//   setDatas: React.Dispatch<React.SetStateAction<string[]>>;\r\n// }\r\n\r\n// const List: React.FC<ListProps> = ({\r\n//   data,\r\n//   all,\r\n//   active,\r\n//   completed,\r\n//   datas,\r\n//   setDatas,\r\n// }) => {\r\n//   const handleChange = (item: string) => {\r\n//     setDatas((prev) =>\r\n//       prev.includes(item) ? prev.filter((i) => i !== item) : [...prev, item]\r\n//     );\r\n//   };\r\n//   const handleRemove= (item:string) => {\r\n//     setDatas((prev) => prev.filter((i) => i !== item)); \r\n//  }\r\n\r\n//   const filteredData = data.filter((item) => {\r\n//     if (all) return true;\r\n//     if (active) return !datas.includes(item);\r\n//     if (completed) return datas.includes(item);\r\n//     return false;\r\n//   });\r\n\r\n//   return (\r\n//     <div>\r\n//       {filteredData.map((item, i) => (\r\n//         <div key={i}>\r\n//           <input\r\n//             type=\"checkbox\"\r\n//             checked={datas.includes(item)}\r\n//             onChange={() => handleChange(item)}\r\n//           />\r\n//           <span>{item}</span>\r\n//           <button\r\n//             onClick={() => handleRemove(item)}\r\n//           >\r\n//             X\r\n//           </button>\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default List;\r\n\r\n\r\nimport React from \"react\";\r\n\r\ninterface ListProps {\r\n  data: string[];\r\n  all: boolean;\r\n  active: boolean;\r\n  completed: boolean;\r\n  datas: string[];\r\n  setDatas: React.Dispatch<React.SetStateAction<string[]>>;\r\n}\r\n\r\nconst List: React.FC<ListProps> = ({\r\n  data,\r\n  all,\r\n  active,\r\n  completed,\r\n  datas,\r\n  setDatas,\r\n}) => {\r\n  // Toggle item between checked and unchecked states\r\n  const handleChange = (item: string) => {\r\n    setDatas((prev) =>\r\n      prev.includes(item)\r\n        ? prev.filter((i) => i !== item) // Remove item\r\n        : [...prev, item] // Add item\r\n    );\r\n  };\r\n\r\n  // Remove item from the list\r\n  const handleRemove = (item: string) => {\r\n    setDatas((prev) => prev.filter((i) => i !== item));\r\n  };\r\n\r\n  // Filter data based on the provided criteria\r\n  const filteredData = data.filter((item) => {\r\n    if (all) return true;\r\n    if (active) return !datas.includes(item); // Show only active items\r\n    if (completed) return datas.includes(item); // Show only completed items\r\n    return false;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {filteredData.map((item, index) => (\r\n        <div key={index}>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={datas.includes(item)}\r\n            onChange={() => handleChange(item)}\r\n          />\r\n          <span>{item}</span>\r\n          <button onClick={() => handleRemove(item)}>X</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAW1B,MAAMC,IAAyB,GAAGA,CAAC;EACjCC,IAAI;EACJC,GAAG;EACHC,MAAM;EACNC,SAAS;EACTC,KAAK;EACLC;AACF,CAAC,KAAK;EACJ;EACA,MAAMC,YAAY,GAAIC,IAAY,IAAK;IACrCF,QAAQ,CAAEG,IAAI,IACZA,IAAI,CAACC,QAAQ,CAACF,IAAI,CAAC,GACfC,IAAI,CAACE,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAKJ,IAAI,CAAC,CAAC;IAAA,EAC/B,CAAC,GAAGC,IAAI,EAAED,IAAI,CAAC,CAAC;IACtB,CAAC;EACH,CAAC;;EAED;EACA,MAAMK,YAAY,GAAIL,IAAY,IAAK;IACrCF,QAAQ,CAAEG,IAAI,IAAKA,IAAI,CAACE,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAKJ,IAAI,CAAC,CAAC;EACpD,CAAC;;EAED;EACA,MAAMM,YAAY,GAAGb,IAAI,CAACU,MAAM,CAAEH,IAAI,IAAK;IACzC,IAAIN,GAAG,EAAE,OAAO,IAAI;IACpB,IAAIC,MAAM,EAAE,OAAO,CAACE,KAAK,CAACK,QAAQ,CAACF,IAAI,CAAC,CAAC,CAAC;IAC1C,IAAIJ,SAAS,EAAE,OAAOC,KAAK,CAACK,QAAQ,CAACF,IAAI,CAAC,CAAC,CAAC;IAC5C,OAAO,KAAK;EACd,CAAC,CAAC;EAEF,oBACET,OAAA;IAAAgB,QAAA,EACGD,YAAY,CAACE,GAAG,CAAC,CAACR,IAAI,EAAES,KAAK,kBAC5BlB,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QACEmB,IAAI,EAAC,UAAU;QACfC,OAAO,EAAEd,KAAK,CAACK,QAAQ,CAACF,IAAI,CAAE;QAC9BY,QAAQ,EAAEA,CAAA,KAAMb,YAAY,CAACC,IAAI;MAAE;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eACFzB,OAAA;QAAAgB,QAAA,EAAOP;MAAI;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnBzB,OAAA;QAAQ0B,OAAO,EAAEA,CAAA,KAAMZ,YAAY,CAACL,IAAI,CAAE;QAAAO,QAAA,EAAC;MAAC;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAP7CP,KAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQV,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACE,EAAA,GA7CI1B,IAAyB;AA+C/B,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}