{"ast":null,"code":"var _jsxFileName = \"/root/todolist/src/App.tsx\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import Input from './input';\n// import List from './list';\n// import Details from './details';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <h2>todos</h2>\n//   <Input/>\n//   <List/>\n//   <Details/>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Input() {\n  _s();\n  // State to hold the current input value\n  const [currentValue, setCurrentValue] = useState('');\n  // State to hold the list of input values\n  const [data, setData] = useState([]);\n\n  // Handle input change\n  const handleChange = event => {\n    setCurrentValue(event.target.value);\n  };\n\n  // Handle form submission or button click to add the input value to data\n  const handleAdd = () => {\n    if (currentValue.trim()) {\n      // Ensure input is not empty or just spaces\n      setData([...data, currentValue]);\n      setCurrentValue(''); // Clear the input field after adding\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inputs\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"What needs to be done?\",\n      value: currentValue,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAdd,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Input, \"J05Hp/dw4yKX5FsAUlC3LkxR+jg=\");\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Input","_s","currentValue","setCurrentValue","data","setData","handleChange","event","target","value","handleAdd","trim","className","children","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","item","index","_c","$RefreshReg$"],"sources":["/root/todolist/src/App.tsx"],"sourcesContent":["// import React from 'react';\n// import Input from './input';\n// import List from './list';\n// import Details from './details';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <h2>todos</h2>\n//   <Input/>\n//   <List/>\n//   <Details/>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from 'react';\n\nfunction Input() {\n  // State to hold the current input value\n  const [currentValue, setCurrentValue] = useState('');\n  // State to hold the list of input values\n  const [data, setData] = useState([]);\n\n  // Handle input change\n  const handleChange = (event) => {\n    setCurrentValue(event.target.value);\n  };\n\n  // Handle form submission or button click to add the input value to data\n  const handleAdd = () => {\n    if (currentValue.trim()) { // Ensure input is not empty or just spaces\n      setData([...data, currentValue]);\n      setCurrentValue(''); // Clear the input field after adding\n    }\n  };\n\n  return (\n    <div className='inputs'>\n      <input\n        placeholder='What needs to be done?'\n        value={currentValue}\n        onChange={handleChange}\n      />\n      <button onClick={handleAdd}>Add</button>\n      {/* Display the data list for demonstration purposes */}\n      <ul>\n        {data.map((item, index) => (\n          <li key={index}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Input;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpD;EACA,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA,MAAMS,YAAY,GAAIC,KAAK,IAAK;IAC9BJ,eAAe,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;;EAED;EACA,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAIR,YAAY,CAACS,IAAI,CAAC,CAAC,EAAE;MAAE;MACzBN,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEF,YAAY,CAAC,CAAC;MAChCC,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;IACvB;EACF,CAAC;EAED,oBACEJ,OAAA;IAAKa,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBd,OAAA;MACEe,WAAW,EAAC,wBAAwB;MACpCL,KAAK,EAAEP,YAAa;MACpBa,QAAQ,EAAET;IAAa;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACFpB,OAAA;MAAQqB,OAAO,EAAEV,SAAU;MAAAG,QAAA,EAAC;IAAG;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAExCpB,OAAA;MAAAc,QAAA,EACGT,IAAI,CAACiB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACpBxB,OAAA;QAAAc,QAAA,EAAiBS;MAAI,GAAZC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAC3B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAAClB,EAAA,CAnCQD,KAAK;AAAAwB,EAAA,GAALxB,KAAK;AAqCd,eAAeA,KAAK;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}