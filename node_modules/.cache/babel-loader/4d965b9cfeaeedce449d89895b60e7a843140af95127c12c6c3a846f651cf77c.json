{"ast":null,"code":"const reducer = (state, action) => {\n  switch (action.type) {\n    case 'Set_Add':\n      return {\n        ...state,\n        todos: [...state.todos, {\n          data: action.payload,\n          completed: false\n        }]\n      };\n    case 'Set_Change':\n      return {\n        ...state,\n        todos: state.todos.map(todo => todo.data === action.payload ? {\n          ...todo,\n          completed: !todo.completed\n        } : todo)\n      };\n    case 'Set_Delete':\n      return {\n        ...state,\n        todos: state.todos.filter(todo => todo.data !== action.payload)\n      };\n    case 'Set_Filter':\n      return {\n        ...state,\n        filter: action.payload\n      };\n    case 'Set_Completed':\n      return {\n        ...state,\n        todos: state.todos.filter(todo => !todo.completed)\n      };\n    default:\n      return state;\n  }\n};\nexport {};","map":{"version":3,"names":["reducer","state","action","type","todos","data","payload","completed","map","todo","filter"],"sources":["/root/todolist/src/Main.tsx"],"sourcesContent":["\r\n\r\n const reducer = (state: State, action: Action): State => {\r\n  switch (action.type) {\r\n    case 'Set_Add':\r\n      return {\r\n        ...state,\r\n        todos: [\r\n          ...state.todos,\r\n          { data: action.payload, completed: false },\r\n        ],\r\n      };\r\n    case 'Set_Change':\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map(todo =>\r\n          todo.data === action.payload\r\n            ? { ...todo, completed: !todo.completed }\r\n            : todo\r\n        ),\r\n      };\r\n    case 'Set_Delete':\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter(todo => todo.data !== action.payload),\r\n      };\r\n    case 'Set_Filter':\r\n      return {\r\n        ...state,\r\n        filter: action.payload,\r\n      };\r\n    case 'Set_Completed':\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter(todo => !todo.completed),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport type Action =\r\n  | { type: 'Set_Add'; payload: string }\r\n  | { type: 'Set_Change'; payload: string }\r\n  | { type: 'Set_Delete'; payload: string }\r\n  | { type: 'Set_Filter'; payload: 'all' | 'active' | 'completed' }\r\n  | { type: 'Set_Completed' };\r\n\r\nexport interface Todo {\r\n  data: string;\r\n  completed: boolean;\r\n}\r\n\r\nexport interface State {\r\n  todos: Todo[];\r\n  filter: 'all' | 'active' | 'completed';\r\n}\r\n"],"mappings":"AAEC,MAAMA,OAAO,GAAGA,CAACC,KAAY,EAAEC,MAAc,KAAY;EACxD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,SAAS;MACZ,OAAO;QACL,GAAGF,KAAK;QACRG,KAAK,EAAE,CACL,GAAGH,KAAK,CAACG,KAAK,EACd;UAAEC,IAAI,EAAEH,MAAM,CAACI,OAAO;UAAEC,SAAS,EAAE;QAAM,CAAC;MAE9C,CAAC;IACH,KAAK,YAAY;MACf,OAAO;QACL,GAAGN,KAAK;QACRG,KAAK,EAAEH,KAAK,CAACG,KAAK,CAACI,GAAG,CAACC,IAAI,IACzBA,IAAI,CAACJ,IAAI,KAAKH,MAAM,CAACI,OAAO,GACxB;UAAE,GAAGG,IAAI;UAAEF,SAAS,EAAE,CAACE,IAAI,CAACF;QAAU,CAAC,GACvCE,IACN;MACF,CAAC;IACH,KAAK,YAAY;MACf,OAAO;QACL,GAAGR,KAAK;QACRG,KAAK,EAAEH,KAAK,CAACG,KAAK,CAACM,MAAM,CAACD,IAAI,IAAIA,IAAI,CAACJ,IAAI,KAAKH,MAAM,CAACI,OAAO;MAChE,CAAC;IACH,KAAK,YAAY;MACf,OAAO;QACL,GAAGL,KAAK;QACRS,MAAM,EAAER,MAAM,CAACI;MACjB,CAAC;IACH,KAAK,eAAe;MAClB,OAAO;QACL,GAAGL,KAAK;QACRG,KAAK,EAAEH,KAAK,CAACG,KAAK,CAACM,MAAM,CAACD,IAAI,IAAI,CAACA,IAAI,CAACF,SAAS;MACnD,CAAC;IACH;MACE,OAAON,KAAK;EAChB;AACF,CAAC;AAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}