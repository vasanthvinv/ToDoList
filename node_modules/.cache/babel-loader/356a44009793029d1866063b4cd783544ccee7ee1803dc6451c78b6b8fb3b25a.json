{"ast":null,"code":"var _jsxFileName = \"/root/todolist/src/input.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Input() {\n  _s();\n  const [data, setData] = useState([]);\n  const [currentValue, setCurrentValue] = useState(\"\");\n  const handleChange = event => {\n    setCurrentValue(event.target.value);\n  };\n  const handleAdd = event => {\n    if (event.key === \"Enter\") {\n      setData([...data, currentValue]);\n      setCurrentValue(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inputs\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"\\\"^\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), \"/>\", /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"What needs to be done?\",\n      value: currentValue,\n      onChange: handleChange,\n      onKeyDown: handleAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(Input, \"7S05MsT0M0ynQxcubx62sdAES0U=\");\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Input","_s","data","setData","currentValue","setCurrentValue","handleChange","event","target","value","handleAdd","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","onKeyDown","_c","$RefreshReg$"],"sources":["/root/todolist/src/input.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Input() {\r\n  const [data, setData] = useState<string[]>([]);\r\n  const [currentValue, setCurrentValue] = useState(\"\");\r\n\r\n  const handleChange = (event: {\r\n    target: { value: React.SetStateAction<string> };\r\n  }) => {\r\n    setCurrentValue(event.target.value);\r\n  };\r\n\r\n  const handleAdd = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.key === \"Enter\") {\r\n      setData([...data, currentValue]);\r\n      setCurrentValue(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"inputs\">\r\n        <button >\"^\"</button>/>\r\n      <input\r\n        placeholder=\"What needs to be done?\"\r\n        value={currentValue}\r\n        onChange={handleChange}\r\n        onKeyDown={handleAdd}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAW,EAAE,CAAC;EAC9C,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMS,YAAY,GAAIC,KAErB,IAAK;IACJF,eAAe,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,MAAMC,SAAS,GAAIH,KAA4C,IAAK;IAClE,IAAIA,KAAK,CAACI,GAAG,KAAK,OAAO,EAAE;MACzBR,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEE,YAAY,CAAC,CAAC;MAChCC,eAAe,CAAC,EAAE,CAAC;IACrB;EACF,CAAC;EACD,oBACEN,OAAA;IAAKa,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACnBd,OAAA;MAAAc,QAAA,EAAS;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,MACvB,eAAAlB,OAAA;MACEmB,WAAW,EAAC,wBAAwB;MACpCT,KAAK,EAAEL,YAAa;MACpBe,QAAQ,EAAEb,YAAa;MACvBc,SAAS,EAAEV;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAChB,EAAA,CA3BQD,KAAK;AAAAqB,EAAA,GAALrB,KAAK;AA6Bd,eAAeA,KAAK;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}